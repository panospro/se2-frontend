/*
* Import the necessary modules
*/
import {T, cond} from 'ramda';
import shortid from 'shortid';
import {reducer} from '../lib/redux-helpers';

// Export an the enitial state (empty array) 
export const initialState = {errors: []};

// Adds an error to the state's errors array with an id generated by the shortid library.
const addError = reducer('UI.ADD_ERROR', (state, {payload}) => ({
    ...state,
    errors: state.errors.concat([{...payload, id: shortid.generate()}])
}));

// Removes an error with a given id from a list of errors.
const removeError = reducer('UI.REMOVE_ERROR', (state, {payload: id}) => ({
    ...state,
    errors: state.errors.filter((error) => error.id !== id)
}));

// Creates a default case for a conditional statement, setting the state to the initial state if there is no existing state.
const defaultCase = [T, (state) => state || initialState];

// Exports a condition, that will execute the addError, removeError, or defaultCase functions depending on the condition.
export default cond([addError, removeError, defaultCase]);
